<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">
	<!-- 这是一个注释
		xmlns:xsi、xmlns：定义 XML Schema 命名空间。
		xsi:schemaLocation：指定 XML Schema 文件的位置。
		id：Web 应用程序的标识符。
		version：Web 应用程序的版本，这里是 2.5。
	-->

	<display-name>Diary</display-name>
	<!--
		display-name：Web 应用程序的显示名称。
	-->
	<welcome-file-list>
		<welcome-file>login.jsp</welcome-file>
	</welcome-file-list>

	<!--
		welcome-file-list：定义了当用户访问根 URL 时，服务器显示的欢迎文件。
		welcome-file：这里是 login.jsp，表示默认访问的页面是 login.jsp。
     -->
	<filter>
		<filter-name>loginFilter</filter-name>
		<filter-class>com.wishwzp.filter.LoginFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>loginFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!--
		filter：定义一个过滤器。
		filter-name：过滤器的名称。
		filter-class：过滤器的实现类。
		filter-mapping：将过滤器映射到 URL 模式。
		filter-name：过滤器的名称。
		url-pattern：URL 模式，这里是 /*，表示过滤所有请求。
     -->
	<servlet>
		<description></description>
		<display-name>LogoutServlet</display-name>
		<servlet-name>LogoutServlet</servlet-name>
		<servlet-class>com.wishwzp.web.LogoutServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>LogoutServlet</servlet-name>
		<url-pattern>/logout</url-pattern>
	</servlet-mapping>
	<servlet>
		<description></description>
		<display-name>login</display-name>
		<servlet-name>login</servlet-name>
		<servlet-class>com.wishwzp.web.LoginServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>login</servlet-name>
		<url-pattern>/login</url-pattern>
	</servlet-mapping>
	<servlet>
		<description></description>
		<display-name>MainServlet</display-name>
		<servlet-name>MainServlet</servlet-name>
		<servlet-class>com.wishwzp.web.MainServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>MainServlet</servlet-name>
		<url-pattern>/main</url-pattern>
	</servlet-mapping>
	<servlet>
		<description></description>
		<display-name>DiaryServlet</display-name>
		<servlet-name>DiaryServlet</servlet-name>
		<servlet-class>com.wishwzp.web.DiaryServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>DiaryServlet</servlet-name>
		<url-pattern>/diary</url-pattern>
	</servlet-mapping>
	<servlet>
		<description></description>
		<display-name>DiaryTypeServlet</display-name>
		<servlet-name>DiaryTypeServlet</servlet-name>
		<servlet-class>com.wishwzp.web.DiaryTypeServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>DiaryTypeServlet</servlet-name>
		<url-pattern>/diaryType</url-pattern>
	</servlet-mapping>
	<servlet>
		<description></description>
		<display-name>UserServlet</display-name>
		<servlet-name>UserServlet</servlet-name>
		<servlet-class>com.wishwzp.web.UserServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>UserServlet</servlet-name>
		<url-pattern>/user</url-pattern>
	</servlet-mapping>

	<!--
			servlet：定义一个 Servlet。
		description：Servlet 的描述（可选）。
		display-name：Servlet 的显示名称。
		servlet-name：Servlet 的名称。
		servlet-class：Servlet 的实现类。
		servlet-mapping：将 Servlet 映射到 URL 模式。
		servlet-name：Servlet 的名称。
		url-pattern：URL 模式。

		在 web.xml 文件中， <servlet> 和 <servlet-mapping> 元素用于配置和映射 Servlet。具体来说：

		<servlet> 元素用于定义一个 Servlet，包括其名称、类以及其他初始化参数等。下面是 <servlet> 元素的详细解释
		<description>：可选元素，用于描述该 Servlet 的功能。这里为空，可以填写一些描述信息。
		<display-name>：可选元素，用于指定 Servlet 的显示名称，通常用于管理界面。
		<servlet-name>：必选元素，用于指定 Servlet 的名称。这是一个唯一标识符，可以在 <servlet-mapping> 中引用。
		<servlet-class>：必选元素，指定实现了 javax.servlet.Servlet 接口的类的全限定名。在这个例子中，它是 com.wishwzp.web.LogoutServlet。

		<servlet-mapping> 元素用于将一个 Servlet 映射到一个或多个 URL 模式。当请求匹配这些 URL 模式时，会由对应的 Servlet 来处理。下面是 <servlet-mapping> 元素的详细解释：
		<servlet-name>：必选元素，用于指定要映射的 Servlet 的名称，这个名称必须与 <servlet> 元素中的 <servlet-name> 一致。
		<url-pattern>：必选元素，用于指定 URL 模式。当客户端请求的 URL 匹配这个模式时，将由指定的 Servlet 来处理。在这个例子中，URL 模式是 /logout。
	-->
</web-app>